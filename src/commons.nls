;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Fonctions communes aux différents agents ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Rotation de l'agent vers sa cible, sans dépasser un angle limite pour garder un certain réalisme
to rotate-agent [ goal ]
  ; Si le drone se trouve à l'endroit souhaité (modulo l'altitude)
  if is-turtle? goal and [xcor] of goal = xcor and [ycor] of goal = ycor or 
  is-patch? goal and [pxcor] of goal = xcor and [pycor] of goal = ycor [
    stop
  ]
  
  ; Calcul de l'angle avec la cible
  let headingFlag (towards-nowrap goal)
  let dirCorrection subtract-headings headingFlag heading
  
  ; Arrondissement de l'angle (on ne veut pas faire de micro tournant)
  set dirCorrection precision dirCorrection 2
  
  ; Limite de l'angle, pour que ce soit plus realiste (l'ennemi ne peut pas faire un demi-tour sur place!)
  ifelse dirCorrection > max-dir [ ; limite a droite
    set dirCorrection max-dir
  ]
  [
    if dirCorrection < max-dir * -1 [ ; limite a gauche
      set dirCorrection max-dir * -1
    ]
  ]
  
  ; On tourne
  rt dirCorrection
end

to-report distance-nowrap-noZAxis [ source target ]
  report [distance-nowrap source] of target - abs ([zcor] of source - [pzcor] of target)
end

to-report detect-agent-between-target [target]
  let temp 1
  let headingFlag heading - 40
  while [ headingFlag < heading + 40 ]
  [
    while [ temp < distance target ]
    [
      if any? other turtles-on patch-at-heading-and-distance headingFlag temp [report true]
      set temp temp + 1
    ]
    set headingFlag headingFlag + 10
  ]
  
  ; Si on arrive là c'est qu'on n'avait pas de 
  report false
end

to-report detect-obstacle-between-target [target]
; Vérification qu'on ne va pas dans le vide
  if abs (xcor - [pxcor] of patch-ahead speed) > speed + safe-distance or abs (ycor - [pycor] of patch-ahead speed) > speed + safe-distance
  [ report true ]
  
  let temp 1
  let headingFlag heading - 40
  while [ headingFlag < heading + 40 ]
  [
    while [ temp < distance target ]
    [
      if [obstacle?] of patch-at-heading-and-distance headingFlag temp [report true]
      set temp temp + 1
    ]
    set headingFlag headingFlag + 10
  ]

  ; Si on arrive là c'est qu'on n'avait pas de 
  report false
end

;;;;;;;;;;;;;;;;;;;;
;; Communications ;;
;;;;;;;;;;;;;;;;;;;;

to-report check-message [msg performative content] 
  report msg != "no_message" and get-performative msg = performative and get-content msg = content
end

to-report create-complete-msg [receiver performative content]
  let msg create-message performative
  set msg add-receiver receiver msg
  set msg add-content content msg
  report msg
end

to-report create-complete-reply [msg performative content]
  let reply create-reply performative msg
  set reply add-content content reply 
  report reply
end

to-report get-msg-if-performative [performative]
  let msg get-message-no-remove
  if get-performative msg = performative [ report get-message ]
  report nobody
end