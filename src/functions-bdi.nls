;;;;;;;;;;;;;
;; BELIEFS ;;
;;;;;;;;;;;;;

; Mise à jour du belief bel si ce belief existe, sinon ajout
to intelligent-update-belief [b-type b-value]
  let bel create-belief b-type b-value
  ifelse exist-beliefs-of-type belief-type bel
    [
      update-belief bel
    ]
    [
      add-belief bel
    ]
end

; Récupération du belief voulu par son type
to-report intelligent-get-belief [b-type]
  report belief-content read-first-belief-of-type b-type
;  ifelse exist-beliefs-of-type b-type
;  [ report belief-content read-first-belief-of-type b-type ]
;  [ report nobody ]
end

to intelligent-lput-belief [b-type new-item]
  let li intelligent-get-belief b-type
  ifelse empty? li
  [ intelligent-update-belief b-type (list new-item) ]
  [ intelligent-update-belief b-type lput new-item li]
end

;; Retire un belief depuis sa clé
to remove-beliefs-with-key [key]
  if exist-beliefs-of-type key [
    remove-belief intelligent-get-belief key
  ]
end

to-report igb [t]
  report intelligent-get-belief t
end