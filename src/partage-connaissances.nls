;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Partage des connaissances ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; send-knowledges
;; ---
;; Envoie un message aux turtles visés,
;; contenant les informations des autres turtles
;; ainsi que ses propres informations s'il y a eu une modification
to send-knowledges
  
  if need-send-knowledges "all"
  [ set-drones-receivers ]
  
  ;; Récuperation des turtles à qui envoyer le message
  let receivers []
  let liste intelligent-get-belief "K-receivers"
  let new-liste liste
  foreach liste
  [
    if can-communicate-with-convoi ?
    [
      set receivers lput ? receivers
      set new-liste remove position ? new-liste new-liste
    ]
  ]
  intelligent-update-belief "K-receivers" new-liste
  
  if empty? receivers [ stop ]
  
  
  ;; Connaissances à propos des drones
  let content create-knowledges-Infos-Drones-drones
  if content != nobody
  [
    let msg create-complete-msg receivers "knowledge" content
    send msg
  ]

  ;; Connaissances à propos des convois
  set content create-knowledges-Infos-Convois-drones
  if content != nobody
  [
    let msg create-complete-msg receivers "knowledge" content
    send msg
  ]
  
  ;; Connaissances à propos des attaquant
;  set content create-knowledges-Infos-Enemies-drones
;  if content != nobody
;  [
;    let msg create-complete-msg receivers "knowledge" content
;    send msg
;  ]
end

;; create-knowledges-Infos-Drones-drones
;; ---
;; Regroupement des connaissances
;; Ne crée un nouveau knowledge que s'il y a eu une modification concernant :
;; • Pour un drone
;;   o Son rôle
;;   o La présence d'attaque ennemi
;;   o L'état du carburant restant
;;   o Une information sur un autre drone
;; • Pour un convoi
;;   o Une information sur un drone
to-report create-knowledges-Infos-Drones-drones
  
  if need-send-knowledges "drones"
  [
    let content []
    ifelse member? self drones ; TODO changer le member? en ajoutant un attribut à tout les turtles
    [
      set content fput (list "tick" ticks "turtle" self "position" patch-here "role" statu "dead" dead? "pv" health "isAtatcked" isAttacked "fuel" fuel) intelligent-get-belief "K-Infos-Drones"
      let content-convoi intelligent-get-belief "K-Infos-Convois"
    ]
    [
      set content intelligent-get-belief "K-Infos-Drones"
    ]
    
    set K-drones-updated false
    
    report (list "K-Infos-Drones" content)
  ]
  
  report nobody
end

;; create-knowledges-Infos-Convois-drones
;; ---
;; Regroupement des connaissances
;; Ne crée un nouveau knowledge que s'il y a eu une modification concernant :
;; • Pour un drone
;;   o Une information sur un convois
;; • Pour un convoi
;;   o Une information sur un autre convois
;;   o 
;;   o 
to-report create-knowledges-Infos-Convois-drones
  if (need-send-knowledges "convois")
  [
    let content []
    ifelse member? self convois
    [
      if not first-send
      [ set first-send true ]
      set content fput (list "tick" ticks "turtle" self "position" patch-here "leader" intelligent-get-belief "leader" "dead" dead? "pv" health "isAtatcked" isAttacked "taille-cortege" length intelligent-get-belief "cortege-buddies") intelligent-get-belief "K-Infos-Convois"
    ]
    [
      set content intelligent-get-belief "K-Infos-Convois"
    ]
    
    set K-convois-updated false
    
    report (list "K-Infos-Convois" content)
  ]
  
  report nobody
end

;; get-receivers-drones
;; ---
;; Récupère les destinataires du message de partage des connaissances des drones
;; • to-communicate            : Si vrai, renvoie seulement les agents dans le champs de communication
;;                               Sinon, renvoie tous les agents qui doivent recevoir le message
;; ---
;; • drone-protect
;; • • leader                  : Envoie à toute son équipe, aux autres drones leader, et au convoi leader
;; • • Sinon                   : Envoie à son leader s'il en a un, sinon ??? TODO
;; • explorer                : Envoie aux drones explorateurs, et aux drones leaders protecteurs
to-report get-receivers-drones [to-communicate]
  if member? self drones
  [
    if statu = "protect-convoi"
    [
      if leader?
      [
        let other-leaders other drones with [ leader? and (not to-communicate or can-communicate-with-convoi self) ]
        let team intelligent-get-belief "drone-protect team"
        if not empty? team
        [ set team remove-item 0 team ]
        
        ifelse intelligent-get-belief "target" != nobody and not member? intelligent-get-belief "target" patches
        [ report sort (sentence other-leaders team intelligent-get-belief "target") ]
        [ report sort (sentence other-leaders team) ]
      ]
      
      if intelligent-get-belief "drone-protect leader" != nobody
      [
        let leader intelligent-get-belief "drone-protect leader"
        if leader = nobody
        [
          ;; TODO envoyer des info à d'autres s'il le faut
          report []
        ]
        report (list leader)
      ]
      
      report sort other drones with [ can-communicate-with-convoi self ]
    ]
    if statu = "explorer"
    [
      ;; Renvoie les drones explorateurs, et les drones leaders protecteurs
      report sort other drones with [ (not to-communicate or can-communicate-with-convoi self) and statu = "explorer" or (statu = "protect-convoi" and leader?) ]
    ]
    
    report []
  ]
  
  if member? self convois
  [
    if leader?
    [
      let drone-leader intelligent-get-belief "drone-protecteur"
      ifelse drone-leader != nobody
      [ report sort (sentence remove self intelligent-get-belief "cortege-buddies" drone-leader) ]
      [ report remove self intelligent-get-belief "cortege-buddies" ]
    ]
    report (list intelligent-get-belief "leader")
  ]
end

;; K-drones-updated
;; ---
;; Ajoute à la liste des receivers les agents qui devronts recevoir les updates
to set-drones-receivers
  intelligent-update-belief "K-receivers" get-receivers-drones false
end

;; need-send-knowledges
;; ---
;; • type-knowledge : Type de knowledge que l'on souhaite partager
;;                    o "all"
;;                    o "drones"
;;                    o "convois"
;;                    o "enemies"
;; • report         : Renvoie s'il est utile d'envoyer nos connaissances
;;                    à notre entourage
to-report need-send-knowledges [ type-knowledge ]
  ;; Pour les Drones
  if member? self drones
  [
    ;; S'il y a eu une modification dans au moins l'une des connaissances
    if type-knowledge = "all"
    [
      report (need-send-knowledges "drones"  or
              need-send-knowledges "convois" or
              need-send-knowledges "enemies")
    ]
    ;; S'il y a eu une modification des connaissances à propos des drones
    if type-knowledge = "drones"
    [
      report (last-role         != intention-name get-intention or
              last-isAttacked   != isAttacked or
              last-stat-of-fuel != floor (fuel / max (list fuel-estimate 50)) or
              K-drones-updated)
    ]
    ;; S'il y a eu une modification des connaissances à propos des convois
    if type-knowledge = "convois"
    [
      report K-convois-updated
    ]
    ;; S'il y a eu une modification des connaissances à propos des ennemis
    if type-knowledge = "enemies"
    [
      report false
    ]  
  ]
  
  ;; Pour les convois
  if member? self convois
  [
    ;; S'il y a eu une modification dans au moins l'une des connaissances
    if type-knowledge = "all"
    [
      report (need-send-knowledges "drones"  or
              need-send-knowledges "convois" or
              need-send-knowledges "enemies")
    ]
    ;; S'il y a eu une modification des connaissances à propos des drones
    if type-knowledge = "drones"
    [
      report K-drones-updated
    ]
    ;; S'il y a eu une modification des connaissances à propos des convois
    if type-knowledge = "convois"
    [
      if not first-send
      [ report true ]
      report (last-cortege != intelligent-get-belief "cortege-buddies" or
              last-isAttacked != isAttacked or
              K-convois-updated)
    ]
    ;; S'il y a eu une modification des connaissances à propos des ennemis
    if type-knowledge = "enemies"
    [
      report false
    ] 
  ]
  
end